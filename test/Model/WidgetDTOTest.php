<?php
/**
 * WidgetDTOTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * openHAB REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.15
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * WidgetDTOTest Class Doc Comment
 *
 * @category    Class
 * @description WidgetDTO
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class WidgetDTOTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "WidgetDTO"
     */
    public function testWidgetDTO()
    {
    }

    /**
     * Test attribute "widget_id"
     */
    public function testPropertyWidgetId()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "label"
     */
    public function testPropertyLabel()
    {
    }

    /**
     * Test attribute "icon"
     */
    public function testPropertyIcon()
    {
    }

    /**
     * Test attribute "labelcolor"
     */
    public function testPropertyLabelcolor()
    {
    }

    /**
     * Test attribute "valuecolor"
     */
    public function testPropertyValuecolor()
    {
    }

    /**
     * Test attribute "mappings"
     */
    public function testPropertyMappings()
    {
    }

    /**
     * Test attribute "switch_support"
     */
    public function testPropertySwitchSupport()
    {
    }

    /**
     * Test attribute "send_frequency"
     */
    public function testPropertySendFrequency()
    {
    }

    /**
     * Test attribute "separator"
     */
    public function testPropertySeparator()
    {
    }

    /**
     * Test attribute "refresh"
     */
    public function testPropertyRefresh()
    {
    }

    /**
     * Test attribute "height"
     */
    public function testPropertyHeight()
    {
    }

    /**
     * Test attribute "min_value"
     */
    public function testPropertyMinValue()
    {
    }

    /**
     * Test attribute "max_value"
     */
    public function testPropertyMaxValue()
    {
    }

    /**
     * Test attribute "step"
     */
    public function testPropertyStep()
    {
    }

    /**
     * Test attribute "url"
     */
    public function testPropertyUrl()
    {
    }

    /**
     * Test attribute "encoding"
     */
    public function testPropertyEncoding()
    {
    }

    /**
     * Test attribute "service"
     */
    public function testPropertyService()
    {
    }

    /**
     * Test attribute "period"
     */
    public function testPropertyPeriod()
    {
    }

    /**
     * Test attribute "legend"
     */
    public function testPropertyLegend()
    {
    }

    /**
     * Test attribute "state"
     */
    public function testPropertyState()
    {
    }

    /**
     * Test attribute "item"
     */
    public function testPropertyItem()
    {
    }

    /**
     * Test attribute "linked_page"
     */
    public function testPropertyLinkedPage()
    {
    }

    /**
     * Test attribute "widgets"
     */
    public function testPropertyWidgets()
    {
    }
}
