<?php
/**
 * HabotApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * openHAB REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.15
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * HabotApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HabotApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for chat
     *
     * Send a query to HABot to interpret..
     *
     */
    public function testChat()
    {
    }

    /**
     * Test case for createCard
     *
     * Creates a new card in the card deck..
     *
     */
    public function testCreateCard()
    {
    }

    /**
     * Test case for createCard_0
     *
     * Creates a new card in the card deck..
     *
     */
    public function testCreateCard0()
    {
    }

    /**
     * Test case for createCard_1
     *
     * Creates a new card in the card deck (compatibility endpoint)..
     *
     */
    public function testCreateCard1()
    {
    }

    /**
     * Test case for deleteCard
     *
     * Deletes a card from the card deck..
     *
     */
    public function testDeleteCard()
    {
    }

    /**
     * Test case for deleteCardPost
     *
     * Deletes a card from the card deck (compatibility endpoint)..
     *
     */
    public function testDeleteCardPost()
    {
    }

    /**
     * Test case for getAllCards
     *
     * Gets all cards of the card deck..
     *
     */
    public function testGetAllCards()
    {
    }

    /**
     * Test case for getAttributes
     *
     * Gets all item named attributes..
     *
     */
    public function testGetAttributes()
    {
    }

    /**
     * Test case for getCardByUid
     *
     * Gets a card from the card deck by its UID..
     *
     */
    public function testGetCardByUid()
    {
    }

    /**
     * Test case for greet
     *
     * Retrieves a first greeting message from the bot in the specified or configured language..
     *
     */
    public function testGreet()
    {
    }

    /**
     * Test case for setCardBookmark
     *
     * Sets a bookmark on a card..
     *
     */
    public function testSetCardBookmark()
    {
    }

    /**
     * Test case for unsetCardBookmark
     *
     * Removes the bookmark on a card..
     *
     */
    public function testUnsetCardBookmark()
    {
    }

    /**
     * Test case for unsetCardBookmarkCompat
     *
     * Removes the bookmark on a card (compatibility endpoint)..
     *
     */
    public function testUnsetCardBookmarkCompat()
    {
    }

    /**
     * Test case for updateCard
     *
     * Updates a card in the card deck..
     *
     */
    public function testUpdateCard()
    {
    }

    /**
     * Test case for updateCardTimestamp
     *
     * Updates the timestamp on a card to the current time.
     *
     */
    public function testUpdateCardTimestamp()
    {
    }

    /**
     * Test case for updateCard_0
     *
     * Updates a card in the card deck (compatibility endpoint)..
     *
     */
    public function testUpdateCard0()
    {
    }

    /**
     * Test case for webPushConfig
     *
     * Gets or generates the public VAPID key used for push notifications..
     *
     */
    public function testWebPushConfig()
    {
    }

    /**
     * Test case for webPushSubscribe
     *
     * Subscribes a new client for push notifications..
     *
     */
    public function testWebPushSubscribe()
    {
    }
}
